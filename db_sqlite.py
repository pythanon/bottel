from datetime import datetime
from loader import bot
from loguru import logger
from database.models import db, User, History, HotelInfo
from keyboards.inline.history_list import output_histories
from telebot.types import Message, CallbackQuery


@logger.catch
def save_user_to_db(username: str) -> None:
    """
    –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ë–î.
    1. –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    2. –î–æ–±–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ë–î.
    :param username: –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¢–µ–ª–µ–≥—Ä–∞–º.
    """
    with db:
        db.create_tables([User, History, HotelInfo])
        try:
            user_id = User.get(User.name == username)
        except Exception:
            user_id = None
        if not user_id:
            User(name=username).save()


@logger.catch
def save_history_to_db(username: str, command: str, city: str, hotels_list: list) -> None:
    """
    –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏ –ø–æ–∏—Å–∫–∞ –≤ –ë–î.

    :param username: –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¢–µ–ª–µ–≥—Ä–∞–º.
    :param command: –∫–æ–º–∞–Ω–¥–∞ –ø–æ–∏—Å–∫–∞.
    :param city: –≥–æ—Ä–æ–¥ –ø–æ–∏—Å–∫–∞.
    :param hotels_list: —Å–ø–∏—Å–æ–∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–æ–∏—Å–∫–∞.
    """
    with db:
        date = datetime.timestamp(datetime.now())
        History(from_user=username,
                date=date,
                command=command,
                city=city).save()
        time = History.select().where(History.from_user == username and History.date == date)
        for i_hotel_text in hotels_list:
            HotelInfo(from_date=time,
                      text=i_hotel_text).save()


@logger.catch
def show_histories_list(message: Message, username: str) -> None:
    """
    –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ –∏—Å—Ç–æ—Ä–∏–∏ –ø–æ–∏—Å–∫–∞ –∏–∑ –ë–î.
    1. –°–æ–±–∏—Ä–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∏—Å—Ç–æ—Ä–∏–∏ –ø–æ–∏—Å–∫–∞.
    2. –ï—Å–ª–∏ —Å–ø–∏—Å–æ–∫ –ø—É—Å—Ç–æ–π, –≤—ã–≤–æ–¥–∏—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.
    3. –ï—Å–ª–∏ –≤ —Å–ø–∏—Å–∫–µ –µ—Å—Ç—å –∑–∞–ø—Ä–æ—Å—ã, –≤—ã–≤–æ–¥–∏—Ç –∏–Ω–ª–∞–π–Ω –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –≤—ã–±–æ—Ä–æ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞.

    :param message: —Å–æ–æ–±—â–µ–Ω–∏–µ –¢–µ–ª–µ–≥—Ä–∞–º.
    :param username: –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¢–µ–ª–µ–≥—Ä–∞–º.
    """
    with db:
        histories_list = [history for history
                          in History.select().where(History.from_user == username)]
        if histories_list:
            kb = output_histories(histories_list)
            bot.send_message(chat_id=message.chat.id,
                             text='–í—ã–±–µ—Ä–∏ –∑–∞–ø—Ä–æ—Å üëá',
                             reply_markup=kb)
        else:
            bot.send_message(chat_id=message.chat.id,
                             text='üìÇ –í –∏—Å—Ç–æ—Ä–∏–∏ –ø–æ–∫–∞ —á—Ç–æ –Ω–∏—á–µ–≥–æ –Ω–µ—Ç.\n'
                                  'üëâ –í–æ—Å–ø–æ–ª—å–∑—É–π—Å—è –∫–æ–º–∞–Ω–¥–æ–π /help –∏ –ø–æ—Å–º–æ—Ç—Ä–∏, —á—Ç–æ –µ—â–µ –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å.')


@bot.callback_query_handler(func=lambda call: call.data.startswith('history-'))
@logger.catch
def output_history_results(call: CallbackQuery) -> None:
    """
    –•–µ–Ω–¥–ª–µ—Ä –¥–ª—è –∑–∞—Ö–≤–∞—Ç–∞ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ —Å –≤—ã–±–æ—Ä–æ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ –≤ –∏—Å—Ç–æ—Ä–∏–∏.
    1. –ü—Ä–æ—Ö–æ–¥–∏—Ç —Ü–∏–∫–ª–æ–º –ø–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º—É –∑–∞–ø—Ä–æ—Å—É –≤ –ë–î.
    2. –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ —á–∞—Ç.

    :param call: –æ—Ç–∫–ª–∏–∫ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã.
    """
    bot.delete_message(call.message.chat.id, call.message.message_id)
    history_date = int(call.data.replace('history-', ''))
    with db:
        for result in HotelInfo.select().where(HotelInfo.from_date == history_date):
            bot.send_message(chat_id=call.message.chat.id,
                             text=result.text,
                             parse_mode='html')
        bot.send_message(chat_id=call.message.chat.id,
                         text='üôÉ –í—ã–≤–µ–ª –≤—Å–µ –∑–∞–ø—Ä–æ—Å—ã!\n'
                              'üëâ –í–æ—Å–ø–æ–ª—å–∑—É–π—Å—è –∫–æ–º–∞–Ω–¥–æ–π /help –∏ –ø–æ—Å–º–æ—Ç—Ä–∏, —á—Ç–æ –µ—â–µ –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å.',
                         parse_mode='html')


@logger.catch
def clear_history(message: Message, username: str) -> None:
    """
    –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –∏—Å—Ç–æ—Ä–∏–∏ –ø–æ–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ë–î.

    :param message: —Å–æ–æ–±—â–µ–Ω–∏–µ –¢–µ–ª–µ–≥—Ä–∞–º.
    :param username: –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¢–µ–ª–µ–≥—Ä–∞–º.
    """
    with db:
        for history in History.select().where(History.from_user == username):
            history_date = History.get(History.date == history.date)
            HotelInfo.delete().where(HotelInfo.from_date == history_date).execute()
            History.delete_instance(history)
    bot.send_message(chat_id=message.chat.id,
                     text=f'‚úÖ –ò—Å—Ç–æ—Ä–∏—è –æ—á–∏—â–µ–Ω–∞!\n'
                          f'üëâ –í–æ—Å–ø–æ–ª—å–∑—É–π—Å—è –∫–æ–º–∞–Ω–¥–æ–π /help –∏ –ø–æ—Å–º–æ—Ç—Ä–∏, —á—Ç–æ –µ—â–µ –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å.')
